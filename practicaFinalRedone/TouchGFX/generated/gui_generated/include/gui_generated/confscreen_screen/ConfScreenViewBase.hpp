/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONFSCREENVIEWBASE_HPP
#define CONFSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/confscreen_screen/ConfScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <gui/containers/TopBar.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class ConfScreenViewBase : public touchgfx::View<ConfScreenPresenter>
{
public:
    ConfScreenViewBase();
    virtual ~ConfScreenViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void PlusFPS()
    {
        // Override and implement this function in ConfScreen
    }

    virtual void PlusMaxTemp()
    {
        // Override and implement this function in ConfScreen
    }

    virtual void PlusMinTemp()
    {
        // Override and implement this function in ConfScreen
    }

    virtual void MinusFPS()
    {
        // Override and implement this function in ConfScreen
    }

    virtual void MinusMaxTemp()
    {
        // Override and implement this function in ConfScreen
    }

    virtual void MinusMinTemp()
    {
        // Override and implement this function in ConfScreen
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::TiledImage backGround;
    TopBar dataBarConf;
    touchgfx::TiledImage botBackground;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > homeButon;
    touchgfx::TiledImage botSlide;
    touchgfx::TiledImage midSlide;
    touchgfx::TiledImage topSlide;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > botMinus;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > midMinus;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > topMinus;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > botPlus;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > midPlus;
    touchgfx::IconButtonStyle< touchgfx::ClickButtonTrigger > topPlus;
    touchgfx::TextArea minTempDesc;
    touchgfx::TextArea maxTempDesc;
    touchgfx::TextArea camDesc;
    touchgfx::TextAreaWithOneWildcard fpsConf;
    touchgfx::TextAreaWithOneWildcard maxTempConf;
    touchgfx::TextAreaWithOneWildcard minTempConf;

    /*
     * Wildcard Buffers
     */
    static const uint16_t FPSCONF_SIZE = 3;
    touchgfx::Unicode::UnicodeChar fpsConfBuffer[FPSCONF_SIZE];
    static const uint16_t MAXTEMPCONF_SIZE = 3;
    touchgfx::Unicode::UnicodeChar maxTempConfBuffer[MAXTEMPCONF_SIZE];
    static const uint16_t MINTEMPCONF_SIZE = 3;
    touchgfx::Unicode::UnicodeChar minTempConfBuffer[MINTEMPCONF_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ConfScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CONFSCREENVIEWBASE_HPP
